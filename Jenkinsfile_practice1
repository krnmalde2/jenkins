pipeline{
    agent any
    //self defined env variable -global scope
     environment{
         NEW_VERSION = '3.10.1'
    //     // SERVER_CREDENTIAL = credential('id') //possivle because of credintial vindinf plugin
    //     SERVER_CREDENTIAL = credential('docker')
     }
    //paramenter for selectinh choices : eg to deploy to dev ot test ot prod server etc
    parameters {
        // string(name: 'VERSION', defaultValue: '', description:'version deplot on prod')
        choice (name: 'VERSION', choices: ['1.0','2.0','3.2'] ,description:'')
        booleanParam (name: 'executeTest', defaultValue: 'true', description:'')
    }


    //build tools for building - gradle,maven,jdk are supported in tools attribute
    // tools{
    //     maven 'Maven'
    // }

    stages{
        stage("build"){
            // conditional statement  : BRANCH_NAME is environment variable : Location="jenkinsurl/env-vars.html"
            // when{
            //     expression{
            //         BRANCH_NAME == "dev" || BRANCH_NAME == "master"
            //     }
            // }
                steps{
            echo "building version ${NEW_VERSION}"// variable should be in double quote
            // echo 'echo version ${NEW_VERSION}'
        }
        }
        stage("test"){
              
           when{
                expression{
                    params.executeTest == true
                }
            }
            steps{
            echo "tesing"
            }
        }
        stage("deploy"){
            // echo "deplotih to $SERVER_CREDENTIALS"
            //  to defined the local scope for credential use withCredentials
            // withCredentials(
            //     [ //defining object with []
            //         usernamePassword(credentials:'server-credentialsid' , usernameVariable: user, passwordVaraible: PASS)
            //     ]
            // )
            // sh "script to copy ${user} ${PASS}" use credential 
             steps{
             echo "deploying vetrsiob $params.VERSION"
        }
        }
       
        
    }
}
//    post build stage should be defined here
    // post{
    //     1.always:These stage will run always 
    //     always{

    //     }
    //     2.success:These stage will run always when build is success 
    //     success{

    //     }
    //     3.failure:These stage will run when build is failed i.e. to send mail to dev or admin
    //     failure{
            
    //     }
    //}
//}